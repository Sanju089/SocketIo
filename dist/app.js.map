{"version":3,"sources":["../src/app.js"],"names":["app","require","http","Server","Port","process","env","port","path","io","customNameSpace","of","on","socket","console","log","emit","value","broadcast","get","req","res","options","root","join","__dirname","filename","sendFile","listen"],"mappings":"AAAA,IAAIA,MAAIC,QAAQ,SAAR,GAAR;AACA,IAAIC,OAAKD,QAAQ,MAAR,EAAgBE,MAAhB,CAAuBH,GAAvB,CAAT;AACA,IAAII,OAAKC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAA7B;;AAEA,IAAIC,OAAMP,QAAQ,MAAR,CAAV;AACA,IAAIQ,KAAGR,QAAQ,WAAR,EAAqBC,IAArB,CAAP;;AAIA,IAAIQ,kBAAgBD,GAAGE,EAAH,CAAM,mBAAN,CAApB;;AAEAD,gBAAgBE,EAAhB,CAAmB,YAAnB,EAAgC,UAASC,MAAT,EAAgB;AAC5CC,YAAQC,GAAR,CAAY,qBAAZ;;AAEAL,oBAAgBM,IAAhB,CAAqB,cAArB,EAAoC,mBAApC;;AAEAH,WAAOD,EAAP,CAAU,YAAV,EAAuB,MAAI;AACvBE,gBAAQC,GAAR,CAAY,mBAAZ;AAEN,KAHE;AAIH,CATD;;AAYA;;AAEA;AACAN,GAAGG,EAAH,CAAM,YAAN,EAAmB,UAASC,MAAT,EAAgB;AAC/BC,YAAQC,GAAR,CAAY,kBAAZ;AACJF,WAAOD,EAAP,CAAU,qBAAV,EAAgC,UAASK,KAAT,EAAe;AAC/C;AACAJ,eAAOK,SAAP,CAAiBF,IAAjB,CAAsB,qBAAtB,EAA4CC,KAA5C,EAF+C,CAEI;AAElD,KAJD;;AAOA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEIJ,WAAOD,EAAP,CAAU,YAAV,EAAuB,MAAI;AACvBE,gBAAQC,GAAR,CAAY,mBAAZ;AACA;AACA;;AAER;AAEK,KAPD;AAQH,CA1BD;;AA8BAf,IAAImB,GAAJ,CAAQ,GAAR,EAAY,UAASC,GAAT,EAAaC,GAAb,EAAiB;AAC7B,QAAIC,UAAQ;AACRC,cAAKf,KAAKgB,IAAL,CAAUC,SAAV;AADG,KAAZ;AAGA,QAAIC,WAAS,YAAb;AACIL,QAAIM,QAAJ,CAAaD,QAAb,EAAsBJ,OAAtB;AACH,CAND;;AAQApB,KAAK0B,MAAL,CAAYxB,IAAZ,EAAiB,YAAU;AACvBU,YAAQC,GAAR,CAAY,sBAAZ;AACH,CAFD","file":"app.js","sourcesContent":["var app=require('express')();\r\nvar http=require('http').Server(app);\r\nvar Port=process.env.port || 3000\r\n\r\nvar path =require('path')\r\nvar io=require('socket.io')(http);\r\n\r\n\r\n\r\nvar customNameSpace=io.of('/custom-namespace')\r\n\r\ncustomNameSpace.on('connection',function(socket){\r\n    console.log('nameSpace connected')\r\n\r\n    customNameSpace.emit('CustomeEvent',\"tester Event Call\")\r\n\r\n    socket.on('disconnect',()=>{\r\n        console.log('A user Disconnect')\r\n\r\n })\r\n})\r\n\r\n\r\n// var users=0;\r\n\r\n//io setup on serverside\r\nio.on('connection',function(socket){\r\n    console.log(\"A user Connected\")\r\nsocket.on(\"send_message_client\",function(value){\r\n// io.emit(\"send_message_server\",value) //to send all user including sender\r\nsocket.broadcast.emit(\"send_message_server\",value) //to see all user except who send\r\n\r\n})\r\n\r\n\r\n// users++;\r\n//for all broadcast new or old all can see\r\n// io.sockets.emit('broadcast',{message:users + `user Connected!`});\r\n\r\n//for custom broadcast new user see only\r\n// socket.emit('newuserConnect',{message:\"Hi,welcome to chatBox!\"})\r\n//for only which user already connected can see msg\r\n// socket.broadcast.emit('newuserConnect',{message:users + \"Users Connected\"})\r\n\r\n    socket.on('disconnect',()=>{\r\n        console.log('A user Disconnect')\r\n        // users--\r\n        // io.sockets.emit('broadcast',{message:users + `user Connected!`});\r\n\r\n// socket.broadcast.emit('newuserConnect',{message:users + \"Users Connected\"})\r\n\r\n    })\r\n})\r\n\r\n\r\n\r\napp.get('/',function(req,res){\r\nvar options={\r\n    root:path.join(__dirname)\r\n}\r\nvar filename='index.html'\r\n    res.sendFile(filename,options)\r\n})\r\n\r\nhttp.listen(Port,function(){\r\n    console.log(\"server ready on 3000\")\r\n})"]}